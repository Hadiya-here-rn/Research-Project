{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNzihrXTqCVyMHgVHDbCp2o",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Hadiya-here-rn/Research-Project/blob/main/figures/scores.png\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "data = {\"Student\":[\"Alice\",\"Bob\",\"Charlie\",\"David\"], \"Score\":[85,90,78,88]}\n",
        "df = pd.DataFrame(data)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "TizOuASaKlQv",
        "outputId": "62957857-8b56-4b6e-c456-25cb708e8c3c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Student  Score\n",
              "0    Alice     85\n",
              "1      Bob     90\n",
              "2  Charlie     78\n",
              "3    David     88"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99f3a297-5312-4b36-8c73-ae380c718161\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Student</th>\n",
              "      <th>Score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alice</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bob</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Charlie</td>\n",
              "      <td>78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>David</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99f3a297-5312-4b36-8c73-ae380c718161')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-99f3a297-5312-4b36-8c73-ae380c718161 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-99f3a297-5312-4b36-8c73-ae380c718161');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a9f6b40b-89b2-4afb-a454-177467523c3d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9f6b40b-89b2-4afb-a454-177467523c3d')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a9f6b40b-89b2-4afb-a454-177467523c3d button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_4011811f-ca20-4751-aa56-a3751fcdde60\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_4011811f-ca20-4751-aa56-a3751fcdde60 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Student\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Bob\",\n          \"David\",\n          \"Alice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 78,\n        \"max\": 90,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          90,\n          88,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Average Score:\", df[\"Score\"].mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kY6pGsVzKqNC",
        "outputId": "95bb8d26-2078-4eb9-ec93-ec46be3306b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Average Score: 85.25\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(df[\"Student\"], df[\"Score\"])\n",
        "plt.title(\"Student Scores\")\n",
        "plt.xlabel(\"Student\")\n",
        "plt.ylabel(\"Score\")\n",
        "plt.savefig(\"scores.png\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "a4vaWADLK4qq",
        "outputId": "98b808ab-c7fb-49b8-ba9c-8e953eee3d67"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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0/79+3X+/PmSqgcAAOCyFSvInDlzRgMHDlT58uXVoEEDHT58WJI0bNgwTZkypUQLBAAAuJhiBZkxY8Zo165d2rhxo/z9/V3tcXFxWrx4cYkVBwAAcCnlirPTypUrtXjxYrVq1UoOh8PV3qBBAx04cKDEigMAALiUYq3I/PDDD6pcuXKh9pycHLdgAwAAcDUVK8g0a9ZMq1evdm1fCC+vvfaaWrduXTKVAQAA/IZinVp66qmn1LlzZ3311Vc6f/68nn/+eX311Vf67LPPtGnTppKuEQAAoEjFWpG59dZbtWvXLp0/f16NGjXSBx98oMqVKyslJUWxsbElXSMAAECRrnhF5ty5c/rrX/+qsWPH6tVXX70aNQEAAFyWK16R8fHx0bJly65GLQAAAFekWKeWevbsqZUrV5ZwKQAAAFemWBf71qpVSxMnTtTmzZsVGxurwMBAt/7hw4eXSHEAAACXUqwgM2fOHIWGhmr79u3avn27W5/D4SDIAACAa6JYQebgwYMlXQcAAMAV+13ffi1JxhgZY0qiFgAAgCtS7CDz+uuvq1GjRgoICFBAQIBuvvlmvfHGGyVZGwAAwCUV69TS9OnTNXbsWA0dOlRt27aVJH366ad66KGHdOLECT3yyCMlWiQAAEBRihVkXnjhBb388svq27evq6179+5q0KCBnnzySYIMAAC4Jop1aiktLU1t2rQp1N6mTRulpaX97qIAAAAuR7GCTM2aNbVkyZJC7YsXL1atWrV+d1EAAACXo1inliZMmKDevXvr448/dl0js3nzZiUnJxcZcAAAAK6GYq3IJCQkaMuWLapYsaJWrlyplStXqmLFitq6dat69epV0jUCAAAUqVgrMpIUGxurN998syRrAQAAuCLFWpF5//33tW7dukLt69at05o1a353UQAAAJejWEFm9OjRys/PL9RujNHo0aN/d1EAAACXo1hBJjU1VfXr1y/UXrduXX377be/uygAAIDLUawgExISou+++65Q+7fffqvAwMDfXRQAAMDlKFaQ6dGjh0aMGKEDBw642r799lv9/e9/V/fu3UusOAAAgEspVpCZOnWqAgMDVbduXcXExCgmJkZ169ZVeHi4nn322ZKuEQAAoEjFevt1SEiIPvvsM3344YfatWuXAgIC1LhxY7Vr166k6wMAALioK1qRSUlJ0XvvvSdJcjgc+sMf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ICDgon3Z2dny9vbW9u3b5e3t7dbndDqLXzSKJTAwUDVr1nRtv/baawoJCdGrr77qwarwa7Vq1ZLD4dDXX3/9m2N9fHzcth0Oh+udLosWLdKoUaM0bdo0tW7dWkFBQXrmmWe0ZcsWt32KOn11KdnZ2YqNjdVbb71VqK9SpUpXNBcubd++fYqJidH333+vrl276uGHH9akSZMUFhamTz/9VAMHDlReXp7Kly8vX19f3XPPPVqwYIHuv/9+LViwQL179+bi3svEioylzp8/r9dff13Tpk1z/U99586d2rVrl6pUqaKFCxf+5hw333zzRd8O2qRJE+Xn5+v48eOqWbOm2y0yMrKkDwdXyOFwyMvLS//73/9Ur1497dq1Szk5Oa7+zZs3y8vLy+0C0F27dul///ufa/vzzz+X0+lUdHT0Na29LAsLC1N8fLxmzZrl9nxccLmf8bF582a1adNGQ4YMUZMmTVSzZs0SWTFp2rSpUlNTVbly5UKv65CQkN89P362fv167dmzRwkJCdq+fbsKCgo0bdo0tWrVSrVr1y7y3aV9+vTR2rVr9Z///Efr169Xnz59Ljp/vXr1tHXrVre2X15Ifr0hyFjqvffe08mTJzVw4EA1bNjQ7ZaQkHBZp5fGjx+vhQsXavz48dq3b5/27Nmjp59+WpJUu3Zt9enTR3379tXy5ct18OBBbd26VZMnT9bq1auv9uHhV3Jzc5Wenq709HTt27dPw4YNU3Z2trp166Y+ffrI399f/fr10969e7VhwwYNGzZMf/7znxUREeGaIy8vTwMHDtRXX32l999/X+PHj9fQoUPl5cWvgZI0a9Ys5efnq0WLFlq2bJlSU1O1b98+zZw587KX/2vVqqUvvvhC69at0zfffKOxY8dq27Ztv7u2Pn36qGLFiurRo4c++eQTHTx4UBs3btTw4cP13//+93fPfz268No8evSoduzYoaeeeko9evRQ165d1bdvX9WsWVPnzp3TCy+8oO+++05vvPGGXnnllULz3HbbbYqMjFSfPn0UExNT6NTRLz300ENKTU3Vo48+qv3792vBggWXfMdqmefha3RQTF27djV33XVXkX0XLjh8/vnnL3mxrzHGLFu2zNxyyy3G19fXVKxY0dx9992uvry8PDNu3DhTvXp14+PjY6KiokyvXr3M7t27r9ZhoQj9+vUzkly3oKAg07x5c/P222+7xuzevdvceeedxt/f34SFhZlBgwaZ06dPu83Ro0cPM27cOBMeHm6cTqcZNGiQOXv2rCcOqcw7duyYSUxMNNWqVTO+vr6matWqpnv37q4L8fWLC3AvCAkJMfPmzTPGGHP27FnTv39/ExISYkJDQ83DDz9sRo8ebRo3buwaf7ELTS91sa8xxqSlpZm+ffuaihUrGj8/P3PTTTeZQYMGmczMzJI5+OvIL1+b5cqVM5UqVTJxcXFm7ty5bhfRT58+3URFRZmAgAATHx9vXn/99SIvzH3ssceMJDNu3Di39l9f7GuMMatWrTI1a9Y0fn5+pl27dmbu3LnX7cW+DmOu4Oo0AACAUoQ1ZQAAYC2CDAAAsBZBBgAAWIsgAwAArEWQAQAA1iLIAAAAaxFkAACAtQgyAKx3xx13aMSIEZ4uA4AHEGQAXBU//PCDHn74Yd14443y8/NTZGSk4uPjtXnzZkk/f1/UypUrPVvkJfTv3189e/b0dBkAfgNfrQngqkhISFBeXp6SkpJ00003KSMjQ8nJyfrxxx89XRqAMoQVGQAl7tSpU/rkk0/09NNP684771S1atXUokULjRkzRt27d1f16tUlSb169ZLD4XBtF7UKMmLECN1xxx2u7ZycHPXt21dOp1NRUVGaNm1aofvPzc3VqFGjVLVqVQUGBqply5bauHGjq3/+/PkKDQ3VunXrVK9ePTmdTnXq1ElpaWmSpCeffFJJSUl655135HA45HA43PYHUHoQZACUOKfTKafTqZUrVyo3N7dQ/4Vvcp43b57S0tKu6JudH330UW3atEnvvPOOPvjgA23cuFE7duxwGzN06FClpKRo0aJF2r17t+6991516tRJqamprjFnzpzRs88+qzfeeEMff/yxDh8+rFGjRkmSRo0apfvuu88VbtLS0tSmTZviPBQArjKCDIASV65cOc2fP19JSUkKDQ1V27Zt9fjjj2v37t2SpEqVKkmSQkNDFRkZ6dr+LdnZ2ZozZ46effZZdejQQY0aNVJSUpLOnz/vGnP48GHNmzdPS5cuVbt27VSjRg2NGjVKt956q+bNm+cad+7cOb3yyitq1qyZmjZtqqFDhyo5OVnSz0EsICDAdW1PZGSkfH19S+rhAVCCCDIAroqEhAQdO3ZM7777rjp16qSNGzeqadOmmj9/frHnPHDggPLy8tSyZUtXW1hYmOrUqePa3rNnj/Lz81W7dm3XypDT6dSmTZt04MAB17jy5curRo0aru2oqCgdP3682LUB8Awu9gVw1fj7+6tjx47q2LGjxo4dqwcffFDjx49X//79ixzv5eUlY4xb27lz567oPrOzs+Xt7a3t27fL29vbrc/pdLp+9vHxcetzOByF7htA6ceKDIBrpn79+srJyZH0c5DIz893669UqZLrgtsLdu7c6fq5Ro0a8vHx0ZYtW1xtJ0+e1DfffOPabtKkifLz83X8+HHVrFnT7RYZGXnZtfr6+haqD0DpQ5ABUOJ+/PFHtW/fXm+++aZ2796tgwcPaunSpZo6dap69OghSapevbqSk5OVnp6ukydPSpLat2+vL774Qq+//rpSU1M1fvx47d271zWv0+nUwIED9eijj2r9+vXau3ev+vfvLy+v//errHbt2urTp4/69u2r5cuX6+DBg9q6dasmT56s1atXX/YxVK9eXbt379b+/ft14sSJK14ZAnBtEGQAlDin06mWLVvqueee02233aaGDRtq7NixGjRokF588UVJ0rRp0/Thhx8qOjpaTZo0kSTFx8dr7Nixeuyxx9S8eXOdPn1affv2dZv7mWeeUbt27dStWzfFxcXp1ltvVWxsrNuYefPmqW/fvvr73/+uOnXqqGfPntq2bZtuvPHGyz6GQYMGqU6dOmrWrJkqVark+iA/AKWLw3BSGAAAWIoVGQAAYC2CDAAAsBZBBgAAWIsgAwAArEWQAQAA1iLIAAAAaxFkAACAtQgyAADAWgQZAABgLYIMAACwFkEGAABYiyADAACs9f8BoHNKc+dLb8gAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ZcwjbD5BLBgF"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}